define("jst/CurveGradesDialog",["compiled/handlebars_helpers","i18n!curve_grades_dialog"],function(a){var b=a.template,c=a.templates=a.templates||{};return c.CurveGradesDialog=b(function(a,b,c,d,e){function r(a,b){var d="",e,f,g,h;d+="\n      ",e="out of %{assignment.points_possible}",f="out_of_points_possible",g={},h="curve_grades_dialog",g.scope=h,k=c.t,h=k||a.t,l={},l.hash=g,typeof h===n?e=h.call(a,f,e,l):h===p?e=o.call(a,"t",f,e,l):e=h;if(e||e===0)d+=e;return d+="\n    ",d}c=c||a.helpers;var f="",g,h,i,j,k,l,m=this,n="function",o=c.helperMissing,p=void 0,q=this.escapeExpression;f+='<form action="',k=c.action,g=k||b.action,typeof g===n?g=g.call(b,{hash:{}}):g===p&&(g=o.call(b,"action",{hash:{}})),f+=q(g)+'" id="curve_grade_dialog" style="display: none;" title="',g="Curve Grade for %{assignment.name}",h="curve_grade_for_assignment",i={},j="curve_grades_dialog",i.scope=j,k=c.t,j=k||b.t,l={},l.hash=i,typeof j===n?g=j.call(b,h,g,l):j===p?g=o.call(b,"t",h,g,l):g=j;if(g||g===0)f+=g;f+='">\n  <input type="hidden" name="_method" value="POST"/>\n  <input type="hidden" name="assignment_id" class="assignment_id" value="',k=c.assignment,g=k||b.assignment,g=g===null||g===undefined||g===!1?g:g.id,typeof g===n?g=g.call(b,{hash:{}}):g===p&&(g=o.call(b,"assignment.id",{hash:{}})),f+=q(g)+'" />\n  <p>\n    ',g="Enter an average grade for the curve for *%{assignment.name}*. The chart shows a best attempt at curving the grades based on current student scores.",h="curve_average",i={},j="curve_grades_dialog",i.scope=j,j="<b>$1</b>",i.w0=j,k=c.t,j=k||b.t,l={},l.hash=i,typeof j===n?g=j.call(b,h,g,l):j===p?g=o.call(b,"t",h,g,l):g=j;if(g||g===0)f+=g;f+='\n  </p>\n  <div style="min-height: 100px;">\n    <table cellpadding="0" cellspacing="0">\n      <tr id="results_list"></tr>\n      <tr id="results_values"></tr>\n    </table>\n  </div>\n  <p style="text-align: center;">\n    ',g="Average Score",h="average_score",i={},j="curve_grades_dialog",i.scope=j,k=c.t,j=k||b.t,l={},l.hash=i,typeof j===n?g=j.call(b,h,g,l):j===p?g=o.call(b,"t",h,g,l):g=j;if(g||g===0)f+=g;f+='\n    <input type="number" min="0" name="middle_score" id="middle_score" style="width: 45px;" value="',k=c.middleScore,g=k||b.middleScore,typeof g===n?g=g.call(b,{hash:{}}):g===p&&(g=o.call(b,"middleScore",{hash:{}})),f+=q(g)+'"/>\n    ',k=c.showOutOf,g=k||b.showOutOf,h=c["if"],l=m.program(1,r,e),l.hash={},l.fn=l,l.inverse=m.noop,g=h.call(b,g,l);if(g||g===0)f+=g;f+='\n  </p>\n  <p>\n    <input type="checkbox" name="assign_blanks" id="assign_blanks"/>\n    <label for="assign_blanks">',g="Assign zeroes to unsubmitted students",h="labels.assign_blanks",i={},j="curve_grades_dialog",i.scope=j,k=c.t,j=k||b.t,l={},l.hash=i,typeof j===n?g=j.call(b,h,g,l):j===p?g=o.call(b,"t",h,g,l):g=j;if(g||g===0)f+=g;f+='</label>\n  </p>\n  <div class="alert alert-danger">\n    <p>\n      ',g="Grade curving cannot be undone. Pre-curved grade histories will be available, but the curving action is irreversible.",h="this_is_permanent",i={},j="curve_grades_dialog",i.scope=j,k=c.t,j=k||b.t,l={},l.hash=i,typeof j===n?g=j.call(b,h,g,l):j===p?g=o.call(b,"t",h,g,l):g=j;if(g||g===0)f+=g;f+='\n    </p>\n  </div>\n  <button data-text-while-loading="',g="Curving Grades...",h="buttons.curving_grades",i={},j="curve_grades_dialog",i.scope=j,k=c.t,j=k||b.t,l={},l.hash=i,typeof j===n?g=j.call(b,h,g,l):j===p?g=o.call(b,"t",h,g,l):g=j;if(g||g===0)f+=g;f+='" type="submit" class="btn btn-primary">\n    ',g="Curve Grades",h="buttons.curve_grades",i={},j="curve_grades_dialog",i.scope=j,k=c.t,j=k||b.t,l={},l.hash=i,typeof j===n?g=j.call(b,h,g,l):j===p?g=o.call(b,"t",h,g,l):g=j;if(g||g===0)f+=g;return f+="\n  </button>\n</form>\n",f}),c.CurveGradesDialog})