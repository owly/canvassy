(function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b={}.hasOwnProperty,c=function(a,c){function e(){this.constructor=a}for(var d in c)b.call(c,d)&&(a[d]=c[d]);return e.prototype=c.prototype,a.prototype=new e,a.__super__=c.prototype,a};define(["i18n!course_settings","jquery","underscore","compiled/views/DialogBaseView","compiled/views/courses/roster/RosterDialogMixin","jst/courses/roster/LinkToStudentsView","compiled/jquery.whenAll","jquery.disableWhileLoading"],function(b,d,e,f,g,h){var i,j;return i=function(f){function i(){return this.update=a(this.update,this),j=i.__super__.constructor.apply(this,arguments),j}return c(i,f),i.mixin(g),i.prototype.dialogOptions={id:"link_students",title:b.t("titles.link_to_students","Link to Students")},i.prototype.render=function(){var a,c,d,f,g,i,j=this;a=this.model.toJSON(),a.studentsUrl=ENV.SEARCH_URL,this.$el.html(h(a)),this.students=[],this.$("#student_input").contextSearch({contexts:ENV.CONTEXTS,placeholder:b.t("link_students_placeholder","Enter a student name"),change:function(a){return j.students=e.map(a,function(a){return parseInt(a)})},selector:{baseData:{type:"user",context:"course_"+ENV.course.id+"_students",exclude:[this.model.get("id")],skip_visibility_checks:!0},noExpand:!0,browser:{data:{per_page:100,type:"user"}}}}),d=this.$("#student_input").data("token_input"),d.$fakeInput.css("width","100%"),i=this.model.allEnrollmentsByType("ObserverEnrollment");for(f=0,g=i.length;f<g;f++)c=i[f],c.observed_user&&e.any(c.observed_user.enrollments)&&d.addToken({value:c.observed_user.id,text:c.observed_user.name,data:c.observed_user});return this},i.prototype.getUserData=function(a){return d.get("/api/v1/courses/"+ENV.course.id+"/users/"+a,{include:["enrollments"]})},i.prototype.update=function(a){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w=this;a.preventDefault(),f=[],j=this.model.allEnrollmentsByType("ObserverEnrollment"),i=j[0],q=e.filter(j,function(a){return!a.associated_user_id}),c=e.compact(e.pluck(j,"associated_user_id")),o=e.difference(this.students,c),p=e.difference(c,this.students),n=[],o.length&&(m=d.Deferred(),f.push(m.promise()),g=0);for(s=0,u=o.length;s<u;s++)l=o[s],this.getUserData(l).done(function(a){var b,c,f,h,j,k,l;h=[],f=e.map(a.enrollments,function(a){return a.course_section_id});for(k=0,l=f.length;k<l;k++)c=f[k],j="/api/v1/sections/"+c+"/enrollments",b={enrollment:{user_id:w.model.get("id"),associated_user_id:a.id,type:i.type,limit_privileges_to_course_section:i.limit_priveleges_to_course_section}},i.role!==i.type&&(b.enrollment.role=i.role),h.push(d.ajaxJSON(j,"POST",b,function(b){return b.observed_user=a,n.push(b)}));return d.when.apply(d,h).done(function(){g+=1;if(g===o.length)return m.resolve()})});k=e.filter(j,function(a){return e.include(p,a.associated_user_id)});for(t=0,v=k.length;t<v;t++)h=k[t],r=""+ENV.COURSE_ROOT_URL+"/unenroll/"+h.id,f.push(d.ajaxJSON(r,"DELETE"));return this.disable(d.when.apply(d,f).done(function(){return w.updateEnrollments(n,k),d.flashMessage(b.t("flash.links","Student links successfully updated"))}).fail(function(){return d.flashError(b.t("flash.linkError","Something went wrong updating the user's student links. Please try again later."))}).always(function(){return w.close()}))},i}(f)})}).call(this)